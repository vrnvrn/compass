{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220dc59c1c6bd25172c7bd97a1b1f79a435ffc8084246d0e7f23ab7311c7c91504e64736f6c634300081e0033","sourceMap":"1504:1657:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220dc59c1c6bd25172c7bd97a1b1f79a435ffc8084246d0e7f23ab7311c7c91504e64736f6c634300081e0033","sourceMap":"1504:1657:46:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"StructHash implements hashing for structs, incorporating type tags for domain separation. The goals of this library are: * Collision resistance: it should not be possible to find two semantically distinct values that   produce the same digest. * Simplicity: implementations should be simple to understand and write, as these methods must   be implemented in multiple languages and environments, including zkSNARK circuits. * Incremental openings: it should be possible to incrementally open a nested struct without   needing to open (very many) extra fields (i.e. the struct should be \\\"Merkle-ized\\\").\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Structural hashing routines used for RISC Zero data structures.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"dependencies/risc0-ethereum-2.0.0/src/StructHash.sol\":\"StructHash\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/\",\":forge-std-1.9.4/src/=dependencies/forge-std-1.9.4/src/\",\":forge-std/=dependencies/forge-std-1.9.4/src/\",\":openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/\",\":risc0-ethereum-2.0.0/=dependencies/risc0-ethereum-2.0.0/\",\":vlayer-0.1.0/=dependencies/vlayer-1.0.2/src/\",\":vlayer-1.0.2/=dependencies/vlayer-1.0.2/src/\"]},\"sources\":{\"dependencies/@openzeppelin-contracts-5.0.1/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"dependencies/risc0-ethereum-2.0.0/src/StructHash.sol\":{\"keccak256\":\"0xce612be2064752d2df89cfa2e9f73bba1ad891438d11d6fa7fc1285350b12fdd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5915dac04779e37024e87f723f9ee2eecc87e9e1162f37d73d5502aced9fb484\",\"dweb:/ipfs/QmRLFdpKoUZeNTNditFTrE72g7sryCVnERE14duRgXHSJs\"]},\"dependencies/risc0-ethereum-2.0.0/src/Util.sol\":{\"keccak256\":\"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c\",\"dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin-contracts-5.0.1/=dependencies/@openzeppelin-contracts-5.0.1/","forge-std-1.9.4/src/=dependencies/forge-std-1.9.4/src/","forge-std/=dependencies/forge-std-1.9.4/src/","openzeppelin-contracts/=dependencies/@openzeppelin-contracts-5.0.1/","risc0-ethereum-2.0.0/=dependencies/risc0-ethereum-2.0.0/","vlayer-0.1.0/=dependencies/vlayer-1.0.2/src/","vlayer-1.0.2/=dependencies/vlayer-1.0.2/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"dependencies/risc0-ethereum-2.0.0/src/StructHash.sol":"StructHash"},"evmVersion":"cancun","libraries":{}},"sources":{"dependencies/@openzeppelin-contracts-5.0.1/utils/math/SafeCast.sol":{"keccak256":"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe","urls":["bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c","dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"],"license":"MIT"},"dependencies/risc0-ethereum-2.0.0/src/StructHash.sol":{"keccak256":"0xce612be2064752d2df89cfa2e9f73bba1ad891438d11d6fa7fc1285350b12fdd","urls":["bzz-raw://5915dac04779e37024e87f723f9ee2eecc87e9e1162f37d73d5502aced9fb484","dweb:/ipfs/QmRLFdpKoUZeNTNditFTrE72g7sryCVnERE14duRgXHSJs"],"license":"Apache-2.0"},"dependencies/risc0-ethereum-2.0.0/src/Util.sol":{"keccak256":"0x230a9a58bb2b0c68d4921ecc3672783f941890a2fa3a238dbe5188cfb7658b82","urls":["bzz-raw://586cb5296c564761609ca8aaae5b1fbbdb19ab1e174f7197f602572d9e82b70c","dweb:/ipfs/QmWxDmucSfg3Wgdk1rVcheDHwkziTsXWvKpKSCnxtpQBqg"],"license":"Apache-2.0"}},"version":1},"id":46}